package com.nath.my_office_page.security;

import org.springframework.context.annotation.Bean;
import org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder;
import org.springframework.security.config.annotation.web.builders.HttpSecurity;
import org.springframework.security.crypto.password.NoOpPasswordEncoder;
import org.springframework.security.crypto.password.PasswordEncoder;

public class AdminSecurity  extends WebSecurityConfigurerAdapter { 

		// Adding the roles 
		protected void configure(AuthenticationManagerBuilder auth) throws Exception { 
			auth.inMemoryAuthentication() 
					.withUser("Zack") 
					.password("aayush") 
					.roles("admin_role") 
					.and() 
					.withUser("Aayush") 
					.password("Saini") 
					.roles("student_role"); 
		} 
		
		// Configuring the api 
		// according to the roles. 
		@SuppressWarnings("removal")
		protected void configure(HttpSecurity http) throws Exception { 
			http. 
					httpBasic() 
					.and() 
					.authorizeRequests() 
					.antMatchers("/delete").hasRole("admin_role") 
					.and() 
					.formLogin(); 
		} 
		
		// Function to encode the password 
		// assign to the particular roles. 
		@SuppressWarnings("deprecation")
		@Bean
		public PasswordEncoder getPasswordEncoder(){ 
			return NoOpPasswordEncoder.getInstance(); 
		} 
	}


}
